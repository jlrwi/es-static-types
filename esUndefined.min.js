/*jslint
    fudge
*/

// Static Land implementation of Undefined

import {
    constant,
    compose
} from "@jlrwi/combinators";
import {
    equals
} from "@jlrwi/esfunctions";

const biconstant = compose (constant) (constant);

const type_name = "esUndefined";

// Setoid :: a -> a -> Boolean
const adt_equals = biconstant (true);

// Ord :: a -> a -> Boolean
const lte = biconstant (true);

// Functor
const map = biconstant (undefined);

const concat = biconstant (undefined);

const empty = constant (undefined);

const validate = equals (undefined);

const create = constant (undefined);

const type_factory = function () {
    return Object.freeze({
        spec: "StaticLand",
        version: 1,
        type_name,
        equals: adt_equals,
        lte,
        concat,
        empty,
        map,
        create,
        validate
    });
};



export default Object.freeze(type_factory);


