/*jslint
    fudge
*/

import esNumber from "./esNumber.min.js";
import {
    constant
} from "@jlrwi/combinators";
import {
    multiply,
    object_concat
} from "@jlrwi/esfunctions";

// Static Land implementation of Number under Multipication
//   an extension of esNumber
const type_name = "esNumberMultiplication";

// Semigroup :: a -> a -> a
const concat = multiply;

// Monoid :: () -> a
const empty = constant (1);

// Group :: a -> a
const invert = function (x) {
    return (
        x === 0
        ? 0
        : 1 / x
    );
};

const type_factory = function (ignore) {
    return object_concat (esNumber ()) ({
        spec: "StaticLand",
        version: 1,
        type_name,
        concat,
        empty,
        invert
    });
}

export default Object.freeze(type_factory);
