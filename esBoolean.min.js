/*jslint
    fudge
*/

import {
    identity
} from "@jlrwi/combinators";
import {
    log,
    equals,
    type_check
} from "@jlrwi/esfunctions";

// Static Land implementation of Boolean
const type_name = "esBoolean";

// Setoid :: a -> a -> Boolean
// Uses imported equals

// Ord :: a -> a -> Boolean
const lte = function (y) {
    return function (x) {
        return !x || y;
    };
};

// Functor :: (a -> b) -> a -> b
const map = identity;

// Custom methods

const validate = type_check("boolean");

const create = identity;

// a -> a -> bool -> a
const map_to = function (when_true) {
    return function (when_false) {
        return function (bool) {
            log("Deprecated: esBoolean.js map_to()");
            return (
                bool
                ? when_true
                : when_false
            );
        };
    };
};

const type_factory = function () {
    return Object.freeze({
        spec: "curried-static-land",
        version: 1,
        type_name,
        equals,
        lte,
        map,
        map_to,     // deprecated
        create,
        validate
    });
};

export default Object.freeze(type_factory);
